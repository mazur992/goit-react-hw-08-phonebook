{"version":3,"file":"static/js/449.d1aceed0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/App.module.css?6c4d","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const contactSelector = state => state.contacts;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectItems = state => state.contacts.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectItems],\n  (filter, items) => {\n    const normilizeFilter = filter.toLocaleLowerCase();\n    return items.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normilizeFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { contactSelector } from 'redux/contacts/selectors';\nimport { Report } from 'notiflix';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport operationsContacts from 'redux/contacts/contactsOperation';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(contactSelector);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleNameChange = event => {\n    const { name: nameTarget, value } = event.target;\n    switch (nameTarget) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInclude = contacts.items.find(contact => contact.name === name);\n    if (isInclude) {\n      Report.info(name + ' Is already in contacts!');\n      return;\n    }\n    dispatch(operationsContacts.createContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  let nameId = nanoid();\n  let numberId = nanoid();\n  return (\n    <form onSubmit={handleSubmit} number={number} name={name}>\n      <label className={css.formLabel} htmlFor={nameId}>\n        Name\n        <input\n          className={css.formInput}\n          id={nameId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleNameChange}\n        />\n      </label>\n      <label className={css.formLabel} htmlFor={numberId}>\n        Number\n        <input\n          className={css.formInput}\n          id={numberId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleNameChange}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filtrTitle\":\"Filter_filtrTitle__IO6DX\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { filterName } from 'redux/contacts/slice';\n// import debounce from 'lodash.debounce';\n// const DEBOUNCE_DELAY = 3000;\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleNameChange = event => {\n    const { value } = event.target;\n    dispatch(filterName(value));\n  };\n  return (\n    <label className={css.filtrTitle}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        // onChange={debounce(handleNameChange, DEBOUNCE_DELAY)}\n        onChange={handleNameChange}\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactBtn\":\"ContactList_contactBtn__We0dD\"};","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  contactSelector,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport operationsContacts from 'redux/contacts/contactsOperation';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(contactSelector);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const delContact = contactId => {\n    dispatch(operationsContacts.deleteContacts(contactId), [dispatch]);\n  };\n\n  return (\n    <ul>\n      {contacts.isLoading && <p>Loading...</p>}\n      {visibleContacts.map(item => {\n        return (\n          <li className={css.contactItem} key={item.id}>\n            {item.name}: {item.number}\n            <button\n              className={css.contactBtn}\n              type=\"button\"\n              onClick={() => delContact(item.id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"appContainer\":\"App_appContainer__os-9r\",\"title\":\"App_title__Xrt9W\",\"subtitle\":\"App_subtitle__j5Uo2\"};","import React, { useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport css from '../../components/App.module.css';\n\n//\nimport operationsContacts from 'redux/contacts/contactsOperation';\nimport { useDispatch } from 'react-redux';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operationsContacts.getContacts());\n  }, [dispatch]);\n  // const handleClick = () => {\n  //   dispatch(operationsContacts.getContacts());\n  // };\n  // const handleClickAdd = () => {\n  //   dispatch(\n  //     operationsContacts.createContacts({\n  //       name: 'Jacob fray',\n  //       number: '761-23-96',\n  //     })\n  //   );\n  // };\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {/* <button\n        style={{\n          height: '25px',\n          width: '60px',\n          marginLeft: '20px',\n          color: 'black',\n        }}\n        onClick={handleClick}\n      >\n        dispatch\n      </button>\n      <button\n        style={{\n          height: '25px',\n          width: '60px',\n          marginLeft: '20px',\n          color: 'black',\n        }}\n        onClick={handleClickAdd}\n      >\n        dispatch\n      </button> */}\n      <div className={css.appContainer}>\n        <div>\n          <h1 className={css.title}>Phonebook</h1>\n          <ContactForm />\n        </div>\n        <div>\n          <h2 className={css.subtitle}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["contactSelector","state","contacts","selectFilter","filter","selectVisibleContacts","createSelector","items","normilizeFilter","toLocaleLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleNameChange","event","target","nameTarget","value","nameId","nanoid","numberId","onSubmit","preventDefault","find","Report","operationsContacts","className","css","htmlFor","id","type","pattern","title","required","onChange","Filter","filterName","visibleContacts","isLoading","map","item","onClick","contactId","Contacts","useEffect","style","height","display","justifyContent","alignItems"],"sourceRoot":""}