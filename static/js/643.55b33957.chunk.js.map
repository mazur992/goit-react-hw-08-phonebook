{"version":3,"file":"static/js/643.55b33957.chunk.js","mappings":"+QASe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAiBXC,GAASC,EAAAA,EAAAA,IAAO,CACpBC,MAAMC,EAAAA,EAAAA,MAASC,WACfC,OAAOF,EAAAA,EAAAA,MAASC,WAChBE,UAAUH,EAAAA,EAAAA,MAASI,IAAI,GAAGC,IAAI,IAAIJ,aAEpC,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEK,cAbgB,CACpBP,KAAM,GACNG,MAAO,GACPC,SAAU,IAWNI,iBAAkBV,EAClBW,SA1Be,SAAC,EAAD,GAA+C,IAA5CT,EAA2C,EAA3CA,KAAMG,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcM,EAAgB,EAAhBA,UACjDd,EACEe,EAAAA,EAAAA,SAAoB,CAClBX,KAAAA,EACAG,MAAAA,EACAC,SAAAA,KAGJM,GACD,EAcG,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,wBAAI,kBAEJ,mBAAOC,QAAQ,OAAf,UAAsB,QAEpB,SAAC,KAAD,CAAOC,KAAK,OAAOd,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAOe,UAAU,YAEtC,mBAAOF,QAAQ,QAAf,UAAuB,SAErB,SAAC,KAAD,CAAOC,KAAK,QAAQd,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAQe,UAAU,YAEvC,mBAAOF,QAAQ,WAAf,UAA0B,YAExB,SAAC,KAAD,CAAOC,KAAK,WAAWd,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,WAAWe,UAAU,YAE1C,SAAC,IAAD,CAAQD,KAAK,SAASE,QAAQ,YAA9B,SAA0C,aAG1C,SAAC,KAAD,CAAMC,GAAG,SAAT,SAAkB,uCAK3B,C","sources":["pages/Register/Register.jsx"],"sourcesContent":["import React from 'react';\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport operations from 'redux/auth/operations';\nimport { ContainerRegisterForm } from 'components/App.styled';\nimport Button from '@mui/material/Button';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(\n      operations.register({\n        name,\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  const schema = object({\n    name: string().required(),\n    email: string().required(),\n    password: string().min(6).max(12).required(),\n  });\n  return (\n    <ContainerRegisterForm>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <h2>Registration</h2>\n\n          <label htmlFor=\"name\">\n            Name\n            <Field type=\"name\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\"></ErrorMessage>\n          </label>\n          <label htmlFor=\"email\">\n            Email\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\"></ErrorMessage>\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\"></ErrorMessage>\n          </label>\n          <Button type=\"submit\" variant=\"contained\">\n            Sign In\n          </Button>\n          <Link to=\"/login\">Already registered? Sign In </Link>\n        </Form>\n      </Formik>\n    </ContainerRegisterForm>\n  );\n}\n"],"names":["Register","dispatch","useDispatch","schema","object","name","string","required","email","password","min","max","initialValues","validationSchema","onSubmit","resetForm","operations","autoComplete","htmlFor","type","component","variant","to"],"sourceRoot":""}